# -*- coding: utf-8 -*-
"""UTS AI.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cEeZGZonrfUpEutfCPGBFDocoU8TrwcN
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler


# Sample data
data = [
{ "usia": 35, "pendidikan": "S1", "lokasi": "Kota Malang", "harga_properti": 800000000, "luas_tanah": 120, "jenis_properti": "rumah" },
{ "usia": 35, "pendidikan": "S1", "lokasi": "Kota Malang", "harga_properti": 800000000, "luas_tanah": 120, "jenis_properti": "rumah" },
{ "usia": 28, "pendidikan": "D3", "lokasi": "Kota Batu", "harga_properti": 1200000000, "luas_tanah": 200, "jenis_properti": "rumah" },
{ "usia": 40, "pendidikan": "S2", "lokasi": "Kota Malang", "harga_properti": 1500000000, "luas_tanah": 300, "jenis_properti": "rumah" },
{ "usia": 45, "pendidikan": "SMA", "lokasi": "Kota Malang", "harga_properti": 500000000, "luas_tanah": 150, "jenis_properti": "tanah" },
{ "usia": 50, "pendidikan": "SMA", "lokasi": "Kota Malang", "harga_properti": 2000000000, "luas_tanah": 400, "jenis_properti": "rumah" },
{ "usia": 32, "pendidikan": "S1", "lokasi": "Kota Batu", "harga_properti": 1000000000, "luas_tanah": 180, "jenis_properti": "rumah" },
{ "usia": 55, "pendidikan": "SMA", "lokasi": "Kota Malang", "harga_properti": 300000000, "luas_tanah": 100, "jenis_properti": "tanah" },
{ "usia": 30, "pendidikan": "D3", "lokasi": "Kota Malang", "harga_properti": 750000000, "luas_tanah": 130, "jenis_properti": "rumah" },
{ "usia": 38, "pendidikan": "S1", "lokasi": "Kota Batu", "harga_properti": 900000000, "luas_tanah": 160, "jenis_properti": "rumah" },
{ "usia": 48, "pendidikan": "SMA", "lokasi": "Kota Malang", "harga_properti": 1800000000, "luas_tanah": 350, "jenis_properti": "rumah" },
{ "usia": 42, "pendidikan": "S2", "lokasi": "Kota Malang", "harga_properti": 2200000000, "luas_tanah": 450, "jenis_properti": "rumah" },
{ "usia": 25, "pendidikan": "D3", "lokasi": "Kota Batu", "harga_properti": 1100000000, "luas_tanah": 190, "jenis_properti": "rumah" },
{ "usia": 60, "pendidikan": "SMA", "lokasi": "Kota Malang", "harga_properti": 400000000, "luas_tanah": 110, "jenis_properti": "tanah" },
{ "usia": 33, "pendidikan": "S1", "lokasi": "Kota Malang", "harga_properti": 850000000, "luas_tanah": 140, "jenis_properti": "rumah" },
{ "usia": 29, "pendidikan": "D3", "lokasi": "Kota Batu", "harga_properti": 1300000000, "luas_tanah": 210, "jenis_properti": "rumah" },
{ "usia": 39, "pendidikan": "S1", "lokasi": "Kota Malang", "harga_properti": 950000000, "luas_tanah": 170, "jenis_properti": "rumah" },
{ "usia": 47, "pendidikan": "SMA", "lokasi": "Kota Malang", "harga_properti": 1900000000, "luas_tanah": 380, "jenis_properti": "rumah" },
{ "usia": 44, "pendidikan": "S2", "lokasi": "Kota Malang", "harga_properti": 2400000000, "luas_tanah": 500, "jenis_properti": "rumah" },
{ "usia": 27, "pendidikan": "D3", "lokasi": "Kota Batu", "harga_properti": 1150000000, "luas_tanah": 195, "jenis_properti": "rumah" },
{ "usia": 52, "pendidikan": "SMA", "lokasi": "Kota Malang", "harga_properti": 2100000000, "luas_tanah": 420, "jenis_properti": "rumah" },

    # Sisipkan data lainnya di sini
]
# Konversi data menjadi dataframe
df = pd.DataFrame(data)

# Menyiapkan data untuk clustering
df_clustering = df[['usia', 'harga_properti', 'luas_tanah']]

# Melakukan standarisasi data
scaler = StandardScaler()
scaled_data = scaler.fit_transform(df_clustering)

# Menentukan jumlah cluster yang diinginkan
kmeans = KMeans(n_clusters=3, random_state=42)

# Melakukan clustering
clusters = kmeans.fit_predict(scaled_data)

# Menambahkan kolom cluster ke dataframe
df['cluster'] = clusters
df['usia_cluster'] = clusters

print("Range usia yang paling memungkinkan membeli properti:")
for i in range(3):
    cluster_mean = df[df['usia_cluster'] == i]['usia'].mean()
    print(f"Cluster {i+1}: {int(cluster_mean-5)} - {int(cluster_mean+5)} tahun")


# Visualisasi hasil clustering
fig = plt.figure(figsize=(8, 6))
ax = fig.add_subplot(111, projection='3d')
ax.scatter(df['usia'], df['harga_properti'], df['luas_tanah'], c=df['cluster'], cmap='viridis', edgecolor='k', s=50)
ax.set_xlabel('Usia')
ax.set_ylabel('Harga Properti')
ax.set_zlabel('Luas Tanah')
ax.set_title('Hasil Clustering Data Properti')
plt.show()

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler

# Data
data = [
    { "usia": 35, "pendidikan": "S1", "lokasi": "Kedungkandang", "harga_properti": 800000000, "luas_tanah": 120, "jenis_properti": "rumah" },
    { "usia": 35, "pendidikan": "S1", "lokasi": "Kedungkandang", "harga_properti": 800000000, "luas_tanah": 120, "jenis_properti": "rumah" },
    { "usia": 28, "pendidikan": "D3", "lokasi": "Blimbing", "harga_properti": 1200000000, "luas_tanah": 200, "jenis_properti": "rumah" },
    { "usia": 40, "pendidikan": "S2", "lokasi": "Lowokwaru", "harga_properti": 1500000000, "luas_tanah": 300, "jenis_properti": "rumah" },
    { "usia": 45, "pendidikan": "SMA", "lokasi": "Klojen", "harga_properti": 500000000, "luas_tanah": 150, "jenis_properti": "tanah" },
    { "usia": 50, "pendidikan": "SMA", "lokasi": "Sukun", "harga_properti": 2000000000, "luas_tanah": 400, "jenis_properti": "rumah" },
    { "usia": 32, "pendidikan": "S1", "lokasi": "Batu", "harga_properti": 1000000000, "luas_tanah": 180, "jenis_properti": "rumah" },
    { "usia": 55, "pendidikan": "SMA", "lokasi": "Batu", "harga_properti": 300000000, "luas_tanah": 100, "jenis_properti": "tanah" },
    { "usia": 30, "pendidikan": "D3", "lokasi": "Kedungkandang", "harga_properti": 750000000, "luas_tanah": 130, "jenis_properti": "rumah" },
    { "usia": 38, "pendidikan": "S1", "lokasi": "Blimbing", "harga_properti": 900000000, "luas_tanah": 160, "jenis_properti": "rumah" },
    { "usia": 48, "pendidikan": "SMA", "lokasi": "Lowokwaru", "harga_properti": 1800000000, "luas_tanah": 350, "jenis_properti": "rumah" },
    { "usia": 42, "pendidikan": "S2", "lokasi": "Klojen", "harga_properti": 2200000000, "luas_tanah": 450, "jenis_properti": "rumah" },
    { "usia": 25, "pendidikan": "D3", "lokasi": "Batu", "harga_properti": 1100000000, "luas_tanah": 190, "jenis_properti": "rumah" },
    { "usia": 60, "pendidikan": "SMA", "lokasi": "Kedungkandang", "harga_properti": 400000000, "luas_tanah": 110, "jenis_properti": "tanah" },
    { "usia": 33, "pendidikan": "S1", "lokasi": "Sukun", "harga_properti": 850000000, "luas_tanah": 140, "jenis_properti": "rumah" },
    { "usia": 29, "pendidikan": "D3", "lokasi": "Blimbing", "harga_properti": 1300000000, "luas_tanah": 210, "jenis_properti": "rumah" },
    { "usia": 39, "pendidikan": "S1", "lokasi": "Lowokwaru", "harga_properti": 950000000, "luas_tanah": 170, "jenis_properti": "rumah" },
    { "usia": 47, "pendidikan": "SMA", "lokasi": "Klojen", "harga_properti": 1900000000, "luas_tanah": 380, "jenis_properti": "rumah" },
    { "usia": 44, "pendidikan": "S2", "lokasi": "Batu", "harga_properti": 2400000000, "luas_tanah": 500, "jenis_properti": "rumah" },
    { "usia": 27, "pendidikan": "D3", "lokasi": "Kedungkandang", "harga_properti": 1150000000, "luas_tanah": 195, "jenis_properti": "rumah" },
    { "usia": 52, "pendidikan": "SMA", "lokasi": "Sukun", "harga_properti": 2100000000, "luas_tanah": 420, "jenis_properti": "rumah" }
]

# Convert data to dataframe
df = pd.DataFrame(data)

# Encode categorical data
df_encoded = pd.get_dummies(df, columns=['pendidikan', 'lokasi', 'jenis_properti'])

# Scaling the data
scaler = MinMaxScaler()
df_scaled = scaler.fit_transform(df_encoded)

# KMeans clustering
kmeans = KMeans(n_clusters=3, random_state=42)
kmeans.fit(df_scaled)
df['cluster'] = kmeans.labels_

# Visualization
plt.scatter(df['usia'], df['cluster'], c=df['cluster'], cmap='rainbow')
plt.xlabel('Usia')
plt.ylabel('Cluster')
plt.title('K-Means Clustering Based on Age and Other Features')
plt.show()

# Predicting potential age range and potential areas
cluster_centers = scaler.inverse_transform(kmeans.cluster_centers_)
for i, center in enumerate(cluster_centers):
    print(f"Cluster {i} - Potential Age Range: {center[0]-5} to {center[0]+5}, Potential Area: {df.columns[6+int(center[1])]}")
